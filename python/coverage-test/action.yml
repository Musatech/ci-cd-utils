name: Run Tests
description: 'Run code testing'

inputs:
  command:
    description: 'Command to run'
    required: true
    default: manage.py test
  min_coverage:
    description: 'Fail if coverage is low than'
    required: false
    default: '60'
  output_command:
    description: 'Command used to export artifacts'
    required: false
    default: 'coverage xml && coverage html'
  xml_path:
    description: 'Path of generated xml file'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
  - name: Run Test
    shell: bash
    run: |
      coverage run -a ${{ inputs.command }}
      coverage report -i --fail-under ${{ inputs.min_coverage }}
      ${{ inputs.output_command }}
  
  - name: Publish Test Report
    shell: bash
    uses: mikepenz/action-junit-report@v3
    if: inputs.xml_path != ''
    with:
      report_paths: ${{ inputs.xml_path }}

  # - name: Code Coverage Summary Report
  #   uses: irongut/CodeCoverageSummary@v1.3.0
  #   with:
  #     filename: coverage.xml
  #     badge: true
  #     format: markdown
  #     hide_branch_rate: false
  #     hide_complexity: true
  #     output: both
  #     thresholds: '25 25'
  
  # - name: Add Coverage PR Comment
  #   uses: marocchino/sticky-pull-request-comment@v2
  #   if: github.event_name == 'pull_request'
  #   with:
  #     recreate: true
  #     path: code-coverage-results.md