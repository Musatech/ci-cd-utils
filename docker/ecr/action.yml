name: Push to ECR
description: 'Compile docker image and push to ECR'

inputs:
  repository:
    description: "Name of repository on ecr"
    required: true
  dockerfile:
    description: "If use a custom dockerfile"
    required: false
    default: 'Dockerfile'
  build_args:
    description: "Pass custom parameters to build"
    required: false
    default: ''
  image_tags:
    description: "Custom image tags to build"
    required: false
    default: |
      type=raw,value=${{ github.sha }}
      type=raw,value=latest

outputs:
  tags:
    description: "URL of image on ECR"
    value: ${{ steps.metadata.outputs.tags }}
  registry:
    description: "ECR image path"
    value: ${{ steps.expose.outputs.repository }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Login to Amazon ECR
      id: login_ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get Tags for Image
      id: metadata
      uses: docker/metadata-action@v3
      with:
        images: ${{ steps.login_ecr.outputs.registry }}/${{ inputs.repository }}
        tags: ${{ inputs.image_tags }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        build-args: ${{ inputs.build_args }}
        push: true
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
        cache-from: type=registry,ref=${{ steps.login_ecr.outputs.registry }}/${{ inputs.repository }}:latest
        cache-to: type=inline
    
    - name: Expose outputs
      id: expose
      shell: bash
      env:
        REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/${{ inputs.repository }}
      run: |
          echo "repository=$REPOSITORY" >> $GITHUB_OUTPUT 